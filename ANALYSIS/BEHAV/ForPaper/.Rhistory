# -------------------------------------- STATS -----------------------------------------------------
#FOR MODEL SELECTION we followed Barr et al. (2013) approach to contruct random structure and covariates SEE --> CODE/ANALYSIS/BEHAV/MODEL_SELECTION/MS_INST_T0.R
# ---------- all trials
# stat -  different fit
formu = '*group + thirsty +hungry + piss + (1 |id)'
## LINEAR FIT
linmod <- lmer(paste('grips~trial', formu),data=INST, control = control, REML = FALSE)
## POLYNOMIAL FIT
quadmod <- lmer(paste('grips~trial+I(trial^2)', formu), data=INST, control = control, REML = FALSE)
cubmod <- lmer(paste('grips~trial+I(trial^2)+I(trial^3)', formu),data=INST, control = control, REML = FALSE)
## PIECEWISE REGRESSION WITH SPLINES
splinemod <- lmer(paste('grips ~ lspline(trial, 5)', formu),  data = INST, control = control, REML = FALSE)
bayesfactor_models(linmod, quadmod, cubmod, splinemod, splinemod2, denominator = linmod) #splinemod is the best fit
anova(splinemod)
### Extract LogLik to compute BF
main = lmer(paste('grips ~ lspline(trial, 5)', formu), data = INST, control = control, REML = F)
null = lmer(paste('grips ~ trial', formu), data = INST, control = control, REML = F)
test = anova(main, null, test = 'Chisq')
#get BF from mixed models see Wagenmakers, 2007
BF_RT = exp((test[1,3] - test[2,3])/2); BF_RT
# -------------------------------------- PLOT  ---------------------------------------------------------
# get the averaged dataset
INST.means <- aggregate(INST$grips, by = list(INST$id, INST$trial, INST$group), FUN='mean') # extract means
colnames(INST.means) <- c('id','trial','group', 'grips')
#over time
dfTRIAL <- summarySEwithin(INST.means,
measurevar = "grips",
withinvars = "trial",
idvar = "id")
dfTRIAL$trial       <- as.numeric(dfTRIAL$trial)
dfTRIALg <- summarySEwithin(INST.means,
measurevar = "grips",
withinvars = "trial",
betweenvars = "group",
idvar = "id")
dfTRIALg$trial       <- as.numeric(dfTRIALg$trial)
dfTRIAL$x = dfTRIAL$trial; dfTRIAL$y = dfTRIAL$grips
splinelm <- lm(y ~ lspline(x, 5), data=dfTRIAL)
pp <- ggplot(dfTRIAL, aes(x =trial, y = grips)) +
geom_point(data = dfTRIALg, aes(shape = group), alpha = 0.3, color = 'black') +
geom_point(data = dfTRIAL, alpha = 0.5, color = pal[4], shape = 18) +
geom_line(color = pal[4]) +
#geom_smooth(method="lm", formula=formula(splinelm), color="tomato",fill = NA, size=0.7) +
geom_ribbon(aes(ymin=grips-se, ymax=grips+se), fill = pal[4], alpha = 0.3)+
ylab('Number of Grips')+
xlab('Trial') +
scale_y_continuous(expand = c(0, 0),  limits = c(10.5,14.05),  breaks=c(seq.int(11,14, by = 1))) +
scale_x_continuous(expand = c(0, 0),  limits = c(0,25),  breaks=c(seq.int(0,25, by = 5))) +
scale_shape_manual(name="Group", labels=c("Lean", "Obese"), values = c(1, 2, 18)) +
theme_bw()
ppp <- pp + averaged_theme + theme(legend.position=c(.9,.88))
ppp
pdf(file.path(figures_path,'Figure_Instrumental_trial.pdf'))
print(ppp)
dev.off()
# -------------------------------------------------------------------------
# **************************************   PIT **************************************************
# --------------------------------------- PREPROC  ----------------------
# define as factors
fac <- c("id", "trial", "condition", "trialxcondition", "gender", "group")
PIT[fac] <- lapply(PIT[fac], factor)
#remove the baseline
PIT.clean =  subset(PIT, condition != 'BL')
#revalue all catego
PIT.clean$group = as.factor(revalue(PIT.clean$group, c(control="-1", obese="1"))) #change value of group
PIT.clean$condition = as.factor(revalue(PIT.clean$condition, c(CSminus="-1", CSplus="1"))); PIT.clean$condition <- factor(PIT.clean$condition, levels = c("1", "-1"))#change value of condition
#center covariates
numer <- c("piss", "thirsty", "hungry", "diff_piss", "diff_thirsty", "diff_hungry", "age")
PIT.clean = PIT.clean %>% group_by %>% mutate_at(numer, scale)
# -------------------------------------- STATS -----------------------------------------------
#FOR MODEL SELECTION we followed Barr et al. (2013) approach to contruct random structure and covariates SEE --> CODE/ANALYSIS/BEHAV/MODEL_SELECTION/MS_PIT_T0.R
# -------------------------------------- RT
formula = 'AUC ~ condition*group + hungry + hungry:condition  + (condition|id) + (1|trialxcondition)'
model = mixed(formula, data = PIT.clean, method = "LRT", control = control, REML = FALSE); model
### General Linear Mixed Models
# Mixed is just a wrapper for lmer to get p-values from parametric bootstrapping #but set to method "LRT" and remove "args_test" to quick check
# model = mixed(formula, data = PIT.clean, method = "PB", control = control, REML = FALSE, args_test = list(nsim = 500, cl=cl)); model
ref_grid(model)  #triple check everything is centered at 0
### Extract LogLik to compute BF
main = lmer(formula, data = PIT.clean, control = control, REML = F)
null = lmer(AUC ~ group + hungry + hungry:condition  + (condition|id) + (1|trialxcondition), data = PIT.clean, control = control, REML = F)
test = anova(main, null, test = 'Chisq')
#get BF from mixed models see Wagenmakers, 2007
BF_PIT = exp((test[1,2] - test[2,2])/2); BF_PIT
### Get posthoc contrasts pval and CI
mod <- lmer(formula, data = PIT.clean, control = control, REML = T) # recompute model with REML = T now for further analysis
p_cond = emmeans(mod, pairwise~ condition, side = ">"); p_cond #for condition (CS+ > CS- right sided)
CI_cond = confint(emmeans(mod, pairwise~ condition),level = 0.95, method = c("boot"), nsim = 5000); CI_cond$contrasts #get CI condition
inter = emmeans(mod, pairwise~ condition|group, adjust = "tukey", side = ">"); inter$contrasts  #for group X condition (adjusted but still right sided)
CI_inter = confint(emmeans(mod, pairwise~ condition|group),level = 0.95,method = c("boot"),nsim = 5000); CI_inter$contrasts ##get CI inter
# -------------------------------------- PLOTS -----------------------------------------------
# create bin for each mini block
PIT.clean$trialxcondition        <- as.numeric(PIT.clean$trialxcondition)
PIT.clean  <- ddply(PIT.clean, "id", transform, bin = as.numeric(cut2(trialxcondition, g = 5)))
PIT.s <- subset (PIT.clean, condition == '1'| condition == '-1')
PIT.s$trialxcondition <- factor(PIT.s$trialxcondition)
PIT.means <- aggregate(PIT.s$AUC, by = list(PIT.s$id, PIT.s$condition, PIT.s$group), FUN='mean') # extract means
colnames(PIT.means) <- c('id','condition', 'group', 'force')
PIT.trial <- aggregate(PIT.s$AUC, by = list(PIT.s$id, PIT.s$trialxcondition), FUN='mean') # extract means
colnames(PIT.trial) <- c('id','trialxcondition','force')
# AVERAGED EFFECT
dfG <- summarySEwithin(PIT.means,
measurevar = "force",
withinvars = "condition",
betweenvars = "group",
idvar = "id")
dfG$cond <- ifelse(dfG$condition == "1", -0.25, 0.25)
PIT.means$cond <- ifelse(PIT.means$condition == "1", -0.25, 0.25)
set.seed(666)
PIT.means <- PIT.means %>% mutate(condjit = jitter(as.numeric(cond), 0.3),
grouping = interaction(id, cond))
labels <- c("-1" = "Lean", "1" = "Obese")
pp <- ggplot(PIT.means, aes(x = cond, y = force,
fill = condition, color = condition)) +
geom_line(aes(x = condjit, group = id, y = force), alpha = .3, size = 0.5, color = 'gray') +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = condition, color = NA))+
geom_point(aes(x = condjit), alpha = .3,) +
geom_crossbar(data = dfG, aes(y = force, ymin=force-se, ymax=force+se), width = 0.2 , alpha = 0.1)+
ylab('Mobilized effort (AUC)')+
xlab('Conditioned stimulus')+
scale_fill_manual(values=c("1" = pal[2],"-1"=pal[1]), guide = 'none') +
scale_color_manual(values=c("1" = pal[2],"-1"=pal[1]), guide = 'none')  +
scale_y_continuous(expand = c(0, 0), breaks = c(seq.int(0,600, by = 100)), limits = c(-10,600.5)) +
scale_x_continuous(labels=c("CS+", "CS-"),breaks = c(-.25,.25), limits = c(-.5,.5)) +
theme_bw() +
facet_wrap(~group, labeller=labeller(group = labels))
ppp <- pp + averaged_theme + theme(strip.background = element_rect(fill="white"))
ppp
pdf(file.path(figures_path,'Figure_PIT.pdf'))
print(ppp)
dev.off()
df_eff = emmeans(mod, pairwise~ condition|group) # get contrasts and means
df.predicted = data.frame(df_eff$contrasts)
df.observed = ddply(PIT.clean, .(id, condition, group), summarise, estimate = mean(AUC, na.rm = TRUE))
CSp = subset(df.observed, condition == '1')
CSm = subset(df.observed, condition == '-1'); diff = CSp
diff$estimate = CSp$estimate - CSm$estimate; df.observed = diff
df.observed.jit <- df.observed %>% mutate(groupjit = jitter(as.numeric(group), 0.25),
grouping = interaction(id, group))
plt0 <- ggplot(df.observed.jit, aes(x = group, y = estimate, fill = group)) +
geom_hline(yintercept=0, linetype="dashed", size=0.4, alpha=0.8) +
geom_point(aes(x=group,y=estimate),size=2,shape=20, alpha=.5, position=position_jitter(width=0.05, seed = 59)) +
geom_flat_violin(aes(x=group,y=estimate),position=position_nudge(x=0.15),adjust=1.5,trim=FALSE,alpha=.6,colour=NA) +
geom_errorbar(data = df.predicted,aes(group = group, ymin=estimate-SE, ymax=estimate+SE),position=position_nudge(x=0.15), size=0.5, width=0.1,  color = "black") +
geom_point(data = df.predicted, aes(x=group,y=estimate),size=1.5,shape=23,position=position_nudge(x=0.15)) +
geom_boxplot(aes(x=group,y=estimate),fatten = 0.5, outlier.shape=NA, alpha=.6,width=.1,colour="black")
labels <- c("-1" = "   Lean", "1" = "   Obese")
plot = plt0 +
scale_y_continuous(expand = c(0, 0), breaks = c(seq.int(-150,150, by = 50)), limits = c(-150,150)) +
scale_x_discrete(labels=labels) +
scale_fill_manual(values=c('royalblue','aquamarine3'),labels=labels) +
theme_bw() +
theme(aspect.ratio = 1.7/1,
plot.margin = unit(c(1, 1, 1.2, 1), units = "cm"),
plot.title = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
panel.grid.major.x = element_blank(), #element_line(size=.2, color="lightgrey") ,
panel.grid.major.y = element_line(size=.2, color="lightgrey") ,
axis.text.x =  element_text(size=14,  colour = "black"), #element_blank(), #element_text(size=10,  colour = "black", vjust = 0.5),
axis.text.y = element_text(size=10,  colour = "black"),
axis.title.x =  element_text(size=16),
axis.title.y = element_text(size=16),
axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "none", #legend.title=element_blank(),legend.text=element_text(size=14),
strip.background = element_rect(fill="white"))+
labs(title = "",
y =  "\u0394 Mobilized Effort (AUC)", x = "",
caption = "Two-way interaction (GroupxPavCue): p = 0.031\n
CS+ > CS-; Lean, p = 0.77; Obese, p = 0.0038\n
Error bar represent \u00B1 SE for the model estimated means\n
Prediction controling for satiety levels\n")
plot(plot)
df_eff = emmeans(mod, pairwise~ condition|group) # get contrasts and means
df.predicted = data.frame(df_eff$contrasts)
df.observed = ddply(PIT.clean, .(id, condition, group), summarise, estimate = mean(AUC, na.rm = T))
CSp = subset(df.observed, condition == '1'); CSm = subset(df.observed, condition == '-1'); diff = CSp
diff$estimate = CSp$estimate - CSm$estimate; df.observed = diff
df.observed.jit <- df.observed %>% mutate(groupjit = jitter(as.numeric(group), 0.25),
grouping = interaction(id, group))
df.observed.jit <- df.observed %>% mutate(groupjit = jitter(as.numeric(group), 0.25),
grouping = interaction(id, group))
View(diff)
View(df.observed)
View(dfG)
View(PIT.means)
View(df.observed)
View(df.predicted)
df_eff = emmeans(mod, pairwise~ condition|group) # get contrasts and means;
dfP = data.frame(df_eff$contrasts) #create a dataframe
CSp = subset(PIT.means, condition == '1'); CSm = subset(PIT.means, condition == '-1'); dfP = CSp
View(CSp)
View(dfP)
df_eff = emmeans(mod, pairwise~ condition|group) # get contrasts and means;
dfP = data.frame(df_eff$contrasts) #create a dataframe
CSp = subset(PIT.means, condition == '1'); CSm = subset(PIT.means, condition == '-1'); cont.means = CSp
df_est = emmeans(mod, pairwise~ condition|group) # get contrasts and means;
dfP = data.frame(df_est$contrasts) #create a dataframe
df_est = emmeans(mod, pairwise~ condition|group) # estimate contrasts means by group from the model
dfP = data.frame(df_est$contrasts); dfP$force = dfP$estimate #create a dataframe
CSp = subset(PIT.means, condition == '1'); CSm = subset(PIT.means, condition == '-1'); cont.means = CSp
cont.means$force = CSp$force - CSm$force;
View(cont.means)
cont.means <- cont.means %>% mutate(groupjit = jitter(as.numeric(group), 0.25),
grouping = interaction(id, group))
ggplot(cont.means, aes(x = groupjit, y = force,
fill = group, color = group)) +
geom_line(aes(x = groupjit, group = id, y = force), alpha = .3, size = 0.5, color = 'gray') +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = condition, color = NA))+
them()
ggplot(cont.means, aes(x = groupjit, y = force,
fill = group, color = group)) +
geom_line(aes(x = groupjit, group = id, y = force), alpha = .3, size = 0.5, color = 'gray') +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = condition, color = NA))
cont.means$group
ggplot(cont.means, aes(x = groupjit, y = force,
fill = group, color = group)) +
geom_line(aes(x = groupjit, group = id, y = force), alpha = .3, size = 0.5, color = 'gray')
ggplot(cont.means, aes(x = groupjit, y = force,
fill = group, color = group)) +
geom_line(aes(x = groupjit, group = id, y = force), alpha = .3, size = 0.5, color = 'gray')
ggplot(cont.means, aes(x = groupjit, y = force,
fill = group, color = group)) +
#geom_line(aes(x = groupjit, group = id, y = force), alpha = .3, size = 0.5, color = 'gray') +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = group, color = NA))+
geom_point(aes(x = groupjit), alpha = .3,)
View(PIT.means)
df_est = emmeans(mod, pairwise~ condition|group) # estimate contrasts means by group from the model
dfP = data.frame(df_est$contrasts); dfP$force = dfP$estimate #create a dataframe
CSp = subset(PIT.means, condition == '1'); CSm = subset(PIT.means, condition == '-1'); cont.means = CSp
cont.means$force = CSp$force - CSm$force;
dfP$groupi <- ifelse(dfP$group == "1", -0.25, 0.25)
cont.means$groupi <- ifelse(cont.means$groupi == "1", -0.25, 0.25)
set.seed(666)
cont.means <- cont.means %>% mutate(groupi = jitter(as.numeric(groupi), 0.25),
grouping = interaction(id, group
)
)
dfP$groupi <- ifelse(dfP$group == "1", -0.25, 0.25)
cont.means$groupi <- ifelse(cont.means$group == "1", -0.25, 0.25)
set.seed(666)
cont.means <- cont.means %>% mutate(groupi = jitter(as.numeric(groupi), 0.25),
grouping = interaction(id, groupi))
ggplot(cont.means, aes(x = groupi, y = force,
fill = group, color = group)) +
#geom_line(aes(x = groupjit, group = id, y = force), alpha = .3, size = 0.5, color = 'gray') +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = group, color = NA))+
geom_point(aes(x = groupjit), alpha = .3,) +
geom_crossbar(data = dfG, aes(y = force, ymin=force-se, ymax=force+se), width = 0.2 , alpha = 0.1)
ggplot(cont.means, aes(x = groupi, y = force,
fill = group, color = group)) +
#geom_line(aes(x = groupjit, group = id, y = force), alpha = .3, size = 0.5, color = 'gray') +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = group, color = NA))+
geom_point(aes(x = groupjit), alpha = .3,) +
geom_crossbar(data = dfG, aes(y = force, ymin=force-se, ymax=force+se), width = 0.2 , alpha = 0.1)
ggplot(cont.means, aes(x = groupi, y = force,
fill = group, color = group)) +
#geom_line(aes(x = groupi, group = id, y = force), alpha = .3, size = 0.5, color = 'gray') +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = group, color = NA))+
geom_point(aes(x = groupi), alpha = .3,) +
geom_crossbar(data = dfG, aes(y = force, ymin=force-se, ymax=force+se), width = 0.2 , alpha = 0.1)
ggplot(cont.means, aes(x = groupi, y = force,
fill = group, color = group)) +
#geom_line(aes(x = groupi, group = id, y = force), alpha = .3, size = 0.5, color = 'gray') +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = group, color = NA))+
geom_point(aes(x = groupi), alpha = .3,) +
geom_crossbar(data = dfP, aes(y = force, ymin=force-se, ymax=force+se), width = 0.2 , alpha = 0.1)
ggplot(cont.means, aes(x = groupi, y = force,
fill = group, color = group)) +
#geom_line(aes(x = groupi, group = id, y = force), alpha = .3, size = 0.5, color = 'gray') +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = group, color = NA))+
geom_point(aes(x = groupi), alpha = .3,) +
geom_crossbar(data = dfP, aes(y = force, ymin=force-SE, ymax=force+SE), width = 0.2 , alpha = 0.1)
ggplot(cont.means, aes(x = groupi, y = force,
fill = group, color = group)) +
#geom_line(aes(x = groupi, group = id, y = force), alpha = .3, size = 0.5, color = 'gray') +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = group, color = NA))+
geom_point(aes(x = groupi), alpha = .3,) +
#geom_crossbar(data = dfP, aes(y = force, ymin=force-SE, ymax=force+SE), width = 0.2 , alpha = 0.1)+
geom_errorbar(data = dfP,aes(group = group, ymin=force-SE, ymax=force+SE),position=position_nudge(x=0.15), size=0.5, width=0.1,  color = "black")
ggplot(cont.means, aes(x = groupi, y = force,
fill = group, color = group)) +
#geom_line(aes(x = groupi, group = id, y = force), alpha = .3, size = 0.5, color = 'gray') +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = group, color = NA))+
geom_point(aes(x = groupi), alpha = .3,) +
geom_crossbar(data = dfP, aes(y = force, ymin=force-SE, ymax=force+SE), width = 0.2 , alpha = 0.1)+
#geom_errorbar(data = dfP,aes(group = group, ymin=force-SE, ymax=force+SE),position=position_nudge(x=0.15), size=0.5, width=0.1,  color = "black") +
ylab('Mobilized effort (AUC)')+
xlab('Conditioned stimulus')+
scale_fill_manual(values=c("1" = pal[2],"-1"=pal[1]), guide = 'none') +
scale_color_manual(values=c("1" = pal[2],"-1"=pal[1]), guide = 'none')  +
#scale_y_continuous(expand = c(0, 0), breaks = c(seq.int(0,600, by = 100)), limits = c(-10,600.5)) +
scale_x_continuous(labels=c("Lean", "Obese"),breaks = c(-.25,.25), limits = c(-.5,.5)) +
theme_bw()
df_est = emmeans(mod, pairwise~ condition|group) # estimate contrasts means by group from the model
dfP = data.frame(df_est$contrasts); dfP$force = dfP$estimate #create a dataframe
CSp = subset(PIT.means, condition == '1'); CSm = subset(PIT.means, condition == '-1'); cont.means = CSp
cont.means$force = CSp$force - CSm$force;
dfP$groupi <- ifelse(dfP$group == "1", -0.25, 0.25)
cont.means$groupi <- ifelse(cont.means$group == "1", -0.25, 0.25)
set.seed(666)
cont.means <- cont.means %>% mutate(groupjit = jitter(as.numeric(groupi), 0.25),
grouping = interaction(id, groupi))
ggplot(cont.means, aes(x = groupi, y = force,
fill = group, color = group)) +
#geom_line(aes(x = groupi, group = id, y = force), alpha = .3, size = 0.5, color = 'gray') +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = group, color = NA))+
geom_point(aes(x = groupjit), alpha = .3,) +
geom_crossbar(data = dfP, aes(y = force, ymin=force-SE, ymax=force+SE), width = 0.2 , alpha = 0.1)
ggplot(cont.means, aes(x = groupi, y = force,
fill = group, color = group)) +
#geom_line(aes(x = groupi, group = id, y = force), alpha = .3, size = 0.5, color = 'gray') +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = group, color = NA))+
geom_point(aes(x = groupjit), alpha = .3,) +
geom_crossbar(data = dfP, aes(y = force, ymin=force-SE, ymax=force+SE), width = 0.2 , alpha = 0.1)+
#geom_errorbar(data = dfP,aes(group = group, ymin=force-SE, ymax=force+SE),position=position_nudge(x=0.15), size=0.5, width=0.1,  color = "black") +
ylab('Mobilized effort (AUC)')+
xlab('Conditioned stimulus')+
scale_fill_manual(values=c("1" = pal[2],"-1"=pal[1]), guide = 'none') +
scale_color_manual(values=c("1" = pal[2],"-1"=pal[1]), guide = 'none')  +
#scale_y_continuous(expand = c(0, 0), breaks = c(seq.int(0,600, by = 100)), limits = c(-10,600.5)) +
scale_x_continuous(labels=c("Lean", "Obese"),breaks = c(-.25,.25), limits = c(-.5,.5)) +
theme_bw()
pp <- ggplot(cont.means, aes(x = groupi, y = force,
fill = group, color = group)) +
geom_hline(yintercept=0, linetype="dashed", size=0.4, alpha=0.8) +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = group, color = NA))+
geom_point(aes(x = groupjit), alpha = .3,) +
geom_crossbar(data = dfP, aes(y = force, ymin=force-SE, ymax=force+SE), width = 0.2 , alpha = 0.1)+
#geom_errorbar(data = dfP,aes(group = group, ymin=force-SE, ymax=force+SE),position=position_nudge(x=0.15), size=0.5, width=0.1,  color = "black") +
ylab('Mobilized effort (AUC)')+
xlab('Conditioned stimulus')+
scale_fill_manual(values=c("1" = pal[2],"-1"=pal[1]), guide = 'none') +
scale_color_manual(values=c("1" = pal[2],"-1"=pal[1]), guide = 'none')  +
#scale_y_continuous(expand = c(0, 0), breaks = c(seq.int(0,600, by = 100)), limits = c(-10,600.5)) +
scale_x_continuous(labels=c("Lean", "Obese"),breaks = c(-.25,.25), limits = c(-.5,.5)) +
theme_bw()
ppp <- pp + averaged_theme
ppp
pp <- ggplot(cont.means, aes(x = groupi, y = force,
fill = group, color = group)) +
geom_hline(yintercept=0, linetype="dashed", size=0.4, alpha=0.8) +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = group, color = NA))+
geom_point(aes(x = groupjit), alpha = .3,) +
geom_crossbar(data = dfP, aes(y = force, ymin=force-SE, ymax=force+SE), width = 0.2 , alpha = 0.1)+
#geom_errorbar(data = dfP,aes(group = group, ymin=force-SE, ymax=force+SE),position=position_nudge(x=0.15), size=0.5, width=0.1,  color = "black") +
ylab('Mobilized effort (AUC)')+
xlab('Conditioned stimulus')+
scale_fill_manual(values=c("1" = pal[2],"-1"=pal[1]), guide = 'none') +
scale_color_manual(values=c("1" = pal[2],"-1"=pal[1]), guide = 'none')  +
scale_y_continuous(expand = c(0, 0), breaks = c(seq.int(-200,200, by = 50)), limits = c(-200.5,200.5)) +
scale_x_continuous(labels=c("Lean", "Obese"),breaks = c(-.25,.25), limits = c(-.5,.5)) +
theme_bw()
ppp <- pp + averaged_theme
ppp
/u0394
pp <- ggplot(cont.means, aes(x = groupi, y = force,
fill = group, color = group)) +
geom_hline(yintercept=0, linetype="dashed", size=0.4, alpha=0.8) +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = group, color = NA))+
geom_point(aes(x = groupjit), alpha = .3,) +
geom_crossbar(data = dfP, aes(y = force, ymin=force-SE, ymax=force+SE), width = 0.2 , alpha = 0.1)+
#geom_errorbar(data = dfP,aes(group = group, ymin=force-SE, ymax=force+SE),position=position_nudge(x=0.15), size=0.5, width=0.1,  color = "black") +
ylab('/u0394 CS+ > CS- Mobilized effort (AUC)')+
xlab('Conditioned stimulus')+
scale_fill_manual(values=c("1" = pal[2],"-1"=pal[1]), guide = 'none') +
scale_color_manual(values=c("1" = pal[2],"-1"=pal[1]), guide = 'none')  +
scale_y_continuous(expand = c(0, 0), breaks = c(seq.int(-200,200, by = 50)), limits = c(-200.5,200.5)) +
scale_x_continuous(labels=c("Lean", "Obese"),breaks = c(-.25,.25), limits = c(-.5,.5)) +
theme_bw()
ppp <- pp + averaged_theme
ppp
ggplot(cont.means, aes(x = groupi, y = force,
fill = group, color = group)) +
geom_hline(yintercept=0, linetype="dashed", size=0.4, alpha=0.8) +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = group, color = NA))+
geom_point(aes(x = groupjit), alpha = .3,) +
geom_crossbar(data = dfP, aes(y = force, ymin=force-SE, ymax=force+SE), width = 0.2 , alpha = 0.1)+
#geom_errorbar(data = dfP,aes(group = group, ymin=force-SE, ymax=force+SE),position=position_nudge(x=0.15), size=0.5, width=0.1,  color = "black") +
ylab('\u0394 CS+ > CS- Mobilized effort (AUC)')+
xlab('Conditioned stimulus')+
scale_fill_manual(values=c("1" = pal[2],"-1"=pal[1]), guide = 'none') +
scale_color_manual(values=c("1" = pal[2],"-1"=pal[1]), guide = 'none')  +
scale_y_continuous(expand = c(0, 0), breaks = c(seq.int(-200,200, by = 50)), limits = c(-200.5,200.5)) +
scale_x_continuous(labels=c("Lean", "Obese"),breaks = c(-.25,.25), limits = c(-.5,.5)) +
theme_bw()
pp <- ggplot(cont.means, aes(x = groupi, y = force,
fill = group, color = group)) +
geom_hline(yintercept=0, linetype="dashed", size=0.4, alpha=0.8) +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = group, color = NA))+
geom_point(aes(x = groupjit), alpha = .3,) +
geom_crossbar(data = dfP, aes(y = force, ymin=force-SE, ymax=force+SE), width = 0.2 , alpha = 0.1)+
#geom_errorbar(data = dfP,aes(group = group, ymin=force-SE, ymax=force+SE),position=position_nudge(x=0.15), size=0.5, width=0.1,  color = "black") +
ylab('\u0394 CS+ > CS- Mobilized effort (AUC)')+
xlab('Conditioned stimulus')+
scale_fill_manual(values=c("1" = pal[2],"-1"=pal[1]), guide = 'none') +
scale_color_manual(values=c("1" = pal[2],"-1"=pal[1]), guide = 'none')  +
scale_y_continuous(expand = c(0, 0), breaks = c(seq.int(-200,200, by = 50)), limits = c(-200.5,200.5)) +
scale_x_continuous(labels=c("Lean", "Obese"),breaks = c(-.25,.25), limits = c(-.5,.5)) +
theme_bw()
ppp <- pp + averaged_theme
ppp
pp <- ggplot(cont.means, aes(x = groupi, y = force,
fill = group, color = group)) +
geom_hline(yintercept=0, linetype="dashed", size=0.4, alpha=0.8) +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = group, color = NA))+
geom_point(aes(x = groupjit), alpha = .3,) +
geom_crossbar(data = dfP, aes(y = force, ymin=force-SE, ymax=force+SE), width = 0.2 , alpha = 0.1)+
#geom_errorbar(data = dfP,aes(group = group, ymin=force-SE, ymax=force+SE),position=position_nudge(x=0.15), size=0.5, width=0.1,  color = "black") +
ylab('\u0394 Mobilized effort (CS+ > CS-)')+
xlab('Conditioned stimulus')+
scale_fill_manual(values=c("1" = pal[2],"-1"=pal[1]), guide = 'none') +
scale_color_manual(values=c("1" = pal[2],"-1"=pal[1]), guide = 'none')  +
scale_y_continuous(expand = c(0, 0), breaks = c(seq.int(-200,200, by = 50)), limits = c(-200.5,200.5)) +
scale_x_continuous(labels=c("Lean", "Obese"),breaks = c(-.25,.25), limits = c(-.5,.5)) +
theme_bw()
ppp <- pp + averaged_theme
ppp
pp <- ggplot(cont.means, aes(x = groupi, y = force,
fill = group, color = group)) +
geom_hline(yintercept=0, linetype="dashed", size=0.4, alpha=0.8) +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = group, color = NA))+
geom_point(aes(x = groupjit), alpha = .3,) +
geom_crossbar(data = dfP, aes(y = force, ymin=force-SE, ymax=force+SE), width = 0.2 , alpha = 0.1)+
#geom_errorbar(data = dfP,aes(group = group, ymin=force-SE, ymax=force+SE),position=position_nudge(x=0.15), size=0.5, width=0.1,  color = "black") +
ylab('\u0394 Mobilized effort (CS+ > CS-)')+
xlab('')+
scale_fill_manual(values=c("1" = pal[2],"-1"=pal[1]), guide = 'none') +
scale_color_manual(values=c("1" = pal[2],"-1"=pal[1]), guide = 'none')  +
scale_y_continuous(expand = c(0, 0), breaks = c(seq.int(-200,200, by = 50)), limits = c(-200.5,200.5)) +
scale_x_continuous(labels=c("Lean", "Obese"),breaks = c(-.25,.25), limits = c(-.5,.5)) +
theme_bw()
ppp <- pp + averaged_theme
ppp
pdf(file.path(figures_path,'Figure_PIT_contrast.pdf'))
print(ppp)
dev.off()
cairo_pdf(file.path(figures_path,'Figure_PIT_contrast.pdf'))
print(ppp)
dev.off()
averaged_theme <- theme_bw(base_size = 32, base_family = "Helvetica")+
theme(strip.text.x = element_text(size = 32, face = "bold"),
strip.background = element_rect(color="white", fill="white", linetype="solid"),
legend.position=c(.9,.9),
legend.title  = element_text(size = 12),
legend.text  = element_text(size = 10),
legend.key.size = unit(0.2, "cm"),
legend.key = element_rect(fill = "transparent", colour = "transparent"),
panel.grid.major.x = element_blank() ,
panel.grid.major.y = element_line(size=.2, color="lightgrey") ,
panel.grid.minor = element_blank(),
axis.title.x = element_text(size = 30),
axis.title.y = element_text(size =  30),
axis.line = element_line(size = 0.5),
panel.border = element_blank())
pp <- ggplot(cont.means, aes(x = groupi, y = force,
fill = group, color = group)) +
geom_hline(yintercept=0, linetype="dashed", size=0.4, alpha=0.8) +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .2, aes(fill = group, color = NA))+
geom_point(aes(x = groupjit), alpha = .3,) +
geom_crossbar(data = dfP, aes(y = force, ymin=force-SE, ymax=force+SE), width = 0.2 , alpha = 0.1)+
#geom_errorbar(data = dfP,aes(group = group, ymin=force-SE, ymax=force+SE),position=position_nudge(x=0.15), size=0.5, width=0.1,  color = "black") +
ylab('\u0394 Mobilized effort (CS+ > CS-)')+
xlab('')+
scale_fill_manual(values=c("1" = pal[2],"-1"=pal[1]), guide = 'none') +
scale_color_manual(values=c("1" = pal[2],"-1"=pal[1]), guide = 'none')  +
scale_y_continuous(expand = c(0, 0), breaks = c(seq.int(-200,200, by = 50)), limits = c(-200.5,200.5)) +
scale_x_continuous(labels=c("Lean", "Obese"),breaks = c(-.25,.25), limits = c(-.5,.5)) +
theme_bw()
ppp <- pp + averaged_theme
ppp
pdf(file.path(figures_path,'Figure_PIT_contrast.pdf'))
print(ppp)
dev.off()
cairo_pdf(file.path(figures_path,'Figure_PIT_contrast.pdf'))
print(ppp)
dev.off()
PIT.p <- summarySEwithin(PIT.clean,
measurevar = "force",
withinvars = c("trialxcondition","condition"),
idvar = "id")
View(PIT.clean)
PIT.p <- summarySEwithin(PIT.clean,
measurevar = "AUC",
withinvars = c("trialxcondition","condition"),
idvar = "id")
PIT.p$trial <- as.numeric(PIT.p$trialxcondition)
PIT.p$Task_Name <- paste0("PIT")
PIT.p = select(PIT.p, c('trial', 'N' , 'force', 'sd', 'se', 'ci', 'Task_Name', 'condition'))
PIT.p <- summarySEwithin(PIT.clean,
measurevar = "AUC",
withinvars = c("trialxcondition","condition"),
betweenvars, = 'group',
idvar = "id")
PIT.p$trial <- as.numeric(PIT.p$trialxcondition)
PIT.p$Task_Name <- paste0("PIT")
PIT.p <- summarySEwithin(PIT.clean,
measurevar = "AUC",
withinvars = c("trialxcondition","condition"),
betweenvars, = "group",
idvar = "id")
# PIT
PIT.p <- summarySEwithin(PIT.clean,
measurevar = "AUC",
withinvars = c("trialxcondition","condition"),
betweenvars = "group",
idvar = "id")
PIT.p$trial <- as.numeric(PIT.p$trialxcondition)
PIT.p$Task_Name <- paste0("PIT")
View(PIT.p)
PIT.p = select(PIT.p, c('trial', 'N' , 'AUC', 'sd', 'se', 'ci', 'Task_Name', 'condition', 'group'))
PIT.p$condition
